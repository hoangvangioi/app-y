name: CI/CD for App Y

on:
  push:
    branches:
      - main

env:
  DOCKER_IMAGE: hoangvangioi/app-y
  CONTAINER_NAME: app-y
  PORT: 8081

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image
        run: |
          docker build -t ${{ env.DOCKER_IMAGE }}:latest .
          docker push ${{ env.DOCKER_IMAGE }}:latest

      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ec2-user
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # Install Docker if not exists
            if ! command -v docker &> /dev/null; then
              sudo dnf update -y
              sudo dnf install -y docker
              sudo systemctl enable docker
              sudo systemctl start docker
              sudo usermod -aG docker ec2-user
            fi

            # Install Nginx if not exists
            if ! command -v nginx &> /dev/null; then
              sudo dnf install -y nginx
              sudo systemctl enable nginx
              sudo systemctl start nginx
            fi

            # Configure Nginx
            sudo tee /etc/nginx/conf.d/multi-app.conf << 'EOL'
            server {
                listen 80;
                server_name _;

                # App X
                location /x {
                    rewrite ^/x(/.*)$ $1 break;
                    proxy_pass http://localhost:8080;
                    proxy_http_version 1.1;
                    proxy_set_header Upgrade $http_upgrade;
                    proxy_set_header Connection 'upgrade';
                    proxy_set_header Host $host;
                    proxy_cache_bypass $http_upgrade;
                }

                # App Y
                location /y {
                    rewrite ^/y(/.*)$ $1 break;
                    proxy_pass http://localhost:8081;
                    proxy_http_version 1.1;
                    proxy_set_header Upgrade $http_upgrade;
                    proxy_set_header Connection 'upgrade';
                    proxy_set_header Host $host;
                    proxy_cache_bypass $http_upgrade;
                }
            }
            EOL

            # Test and reload Nginx
            sudo nginx -t && sudo systemctl reload nginx

            # Pull and run new container
            sudo docker pull ${{ env.DOCKER_IMAGE }}:latest
            sudo docker stop ${{ env.CONTAINER_NAME }} || true
            sudo docker rm ${{ env.CONTAINER_NAME }} || true
            sudo docker run --name ${{ env.CONTAINER_NAME }} \
              -p ${{ env.PORT }}:${{ env.PORT }} \
              --restart unless-stopped \
              -d ${{ env.DOCKER_IMAGE }}:latest 